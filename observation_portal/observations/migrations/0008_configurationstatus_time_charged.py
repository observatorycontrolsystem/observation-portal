# Generated by Django 4.0.3 on 2023-01-25 23:04

from django.db import migrations, models
import logging
from observation_portal.observations.time_accounting import configuration_time_used


logger = logging.getLogger()


def forward(apps, schema_editor):
    # Fill in the time_charged field for all existing configuration statuses here based on their Summary time used.
    ConfigurationStatus = apps.get_model('observations', 'ConfigurationStatus')
    for configuration_status in ConfigurationStatus.objects.exclude(state='PENDING').iterator():
        try:
            has_summary = hasattr(configuration_status, 'summary')
            if has_summary:
                time_used = configuration_time_used(configuration_status.summary, configuration_status.observation.request.request_group.observation_type)
                configuration_status.time_charged = time_used.total_seconds() / 3600.0
                configuration_status.save()
        except Exception:
            logger.warning(f"Failed to update time_charged for configuration status {configuration_status.id}")


class Migration(migrations.Migration):

    dependencies = [
        ('observations', '0007_alter_configurationstatus_unique_together'),
    ]

    operations = [
        migrations.AddField(
            model_name='configurationstatus',
            name='time_charged',
            field=models.FloatField(blank=True, default=0.0, help_text='Time in fractional hours that was debited from a TimeAllocation for this configuration'),
        ),
        migrations.RunPython(forward)
    ]
